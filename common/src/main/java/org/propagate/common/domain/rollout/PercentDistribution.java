package org.propagate.common.domain.rollout;

import org.propagate.common.domain.Variation;

import java.util.Objects;
import java.util.StringJoiner;

public class PercentDistribution {
    private int percent;
    private Variation variation;

    // region Constructor, getters, setters, equals, hashCode, toString -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    public PercentDistribution(int percent, Variation variation) {
        this.percent = percent;
        this.variation = Objects.requireNonNull(variation);
    }

    // region Getters and setters -- generated by BoB the Builder of Beans
    public int getPercent() {
        return percent;
    }

    public void setPercent(int percent) {
        this.percent = percent;
    }

    public Variation getVariation() {
        return variation;
    }

    public void setVariation(Variation variation) {
        this.variation = Objects.requireNonNull(variation);
    }// endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        PercentDistribution that = (PercentDistribution) o;

        return Objects.equals(this.getPercent(), that.getPercent()) && Objects.equals(this.getVariation(), that.getVariation());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getPercent(), getVariation());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
                .add("percent=" + getPercent())
                .add("variation=" + getVariation())
                .toString();
    }// endregion toString()
    // endregion Constructor, getters, setters, equals, hashCode, toString
}
