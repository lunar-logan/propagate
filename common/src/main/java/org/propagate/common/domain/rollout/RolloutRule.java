package org.propagate.common.domain.rollout;

import java.util.*;

public class RolloutRule {
    @Nullable
    private Long id;
    private RolloutRuleType ruleType;
    
    @Nullable
    private List<ConditionalDistribution> conditionalDistribution;
    
    @Nullable
    private List<PercentDistribution> percentDistribution;
    
    @Nullable
    private Date created;
    
    @Nullable
    private Date lastUpdated;

    // region Constructor, getters, setters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    protected RolloutRule(@Nullable Long id, RolloutRuleType ruleType, @Nullable Collection<ConditionalDistribution> conditionalDistribution, @Nullable Collection<PercentDistribution> percentDistribution, @Nullable Date created, @Nullable Date lastUpdated) {
        this.id = id;
        this.ruleType = Objects.requireNonNull(ruleType);
        this.conditionalDistribution = conditionalDistribution != null ? new ArrayList<>(conditionalDistribution) : null;
        this.percentDistribution = percentDistribution != null ? new ArrayList<>(percentDistribution) : null;
        this.created = created;
        this.lastUpdated = lastUpdated;
    }

    // region Getters and setters -- generated by BoB the Builder of Beans
    public Optional<Long> getId() {
        return Optional.ofNullable(id);
    }

    public void setId(@Nullable Long id) {
        this.id = id;
    }

    public RolloutRuleType getRuleType() {
        return ruleType;
    }

    public void setRuleType(RolloutRuleType ruleType) {
        this.ruleType = Objects.requireNonNull(ruleType);
    }

    public Optional<List<ConditionalDistribution>> getConditionalDistribution() {
        return Optional.ofNullable(conditionalDistribution);
    }

    public void setConditionalDistribution(@Nullable List<ConditionalDistribution> conditionalDistribution) {
        this.conditionalDistribution = conditionalDistribution != null ? new ArrayList<>(conditionalDistribution) : null;
    }

    public Optional<List<PercentDistribution>> getPercentDistribution() {
        return Optional.ofNullable(percentDistribution);
    }

    public void setPercentDistribution(@Nullable List<PercentDistribution> percentDistribution) {
        this.percentDistribution = percentDistribution != null ? new ArrayList<>(percentDistribution) : null;
    }

    public Optional<Date> getCreated() {
        return Optional.ofNullable(created);
    }

    public void setCreated(@Nullable Date created) {
        this.created = created;
    }

    public Optional<Date> getLastUpdated() {
        return Optional.ofNullable(lastUpdated);
    }

    public void setLastUpdated(@Nullable Date lastUpdated) {
        this.lastUpdated = lastUpdated;
    }// endregion Getters and setters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        RolloutRule that = (RolloutRule) o;

        return Objects.equals(this.getId(), that.getId()) && Objects.equals(this.getRuleType(), that.getRuleType()) && Objects.equals(this.getConditionalDistribution(), that.getConditionalDistribution()) && Objects.equals(this.getPercentDistribution(), that.getPercentDistribution()) && Objects.equals(this.getCreated(), that.getCreated()) && Objects.equals(this.getLastUpdated(), that.getLastUpdated());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getRuleType(), getConditionalDistribution(), getPercentDistribution(), getCreated(), getLastUpdated());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
                .add("id=" + getId())
                .add("ruleType=" + getRuleType())
                .add("conditionalDistribution=" + getConditionalDistribution())
                .add("percentDistribution=" + getPercentDistribution())
                .add("created=" + getCreated())
                .add("lastUpdated=" + getLastUpdated())
                .toString();
    }// endregion toString()

    // region Builder -- generated by BoB the Builder of Beans
    public static RolloutRule.Builder builder() {
        return new RolloutRule.Builder();
    }

    public static RolloutRule.Builder builder(RolloutRule data) {
        return new RolloutRule.Builder(data);
    }

    public static final class Builder {

        private Long id;
        private RolloutRuleType ruleType;
        private List<ConditionalDistribution> conditionalDistribution;
        private List<PercentDistribution> percentDistribution;
        private Date created;
        private Date lastUpdated;

        private Builder() {
        }

        private Builder(RolloutRule initialData) {
            this.id = initialData.id;
            this.ruleType = initialData.ruleType;
            this.conditionalDistribution = initialData.conditionalDistribution != null ? new ArrayList<>(initialData.conditionalDistribution) : null;
            this.percentDistribution = initialData.percentDistribution != null ? new ArrayList<>(initialData.percentDistribution) : null;
            this.created = initialData.created;
            this.lastUpdated = initialData.lastUpdated;
        }

        public Builder setId(@Nullable Long id) {
            this.id = id;
            return this;
        }

        public Builder setRuleType(RolloutRuleType ruleType) {
            this.ruleType = ruleType;
            return this;
        }

        public Builder setConditionalDistribution(@Nullable List<ConditionalDistribution> conditionalDistribution) {
            this.conditionalDistribution = conditionalDistribution;
            return this;
        }

        public Builder setPercentDistribution(@Nullable List<PercentDistribution> percentDistribution) {
            this.percentDistribution = percentDistribution;
            return this;
        }

        public Builder setCreated(@Nullable Date created) {
            this.created = created;
            return this;
        }

        public Builder setLastUpdated(@Nullable Date lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }

        public RolloutRule build() {
            return new RolloutRule(id, ruleType, conditionalDistribution, percentDistribution, created, lastUpdated);
        }
    }// endregion Builder
    // endregion Constructor, getters, setters, equals, hashCode, toString, builder
}
